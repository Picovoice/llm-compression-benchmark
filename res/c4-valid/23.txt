64 ビット符号付き整数を表します。Represents a 64-bit signed integer.
Int64 変更不可の値の型を表す符号付き整数 9,223,372,036,854,775,808 負の値の範囲の値を (で表される、Int64.MinValue定数) (これは、で表される正9,223,372,036,854,775,807経由Int64.MaxValue定数。Int64 is an immutable value type that represents signed integers with values that range from negative 9,223,372,036,854,775,808 (which is represented by the Int64.MinValue constant) through positive 9,223,372,036,854,775,807 (which is represented by the Int64.MaxValue constant. .NET Framework には、64 ビット符号なし整数値の型も含まれていますUInt6418,446,744,073,709,551,615 を 0 から範囲の値を表します。The .NET Framework also includes an unsigned 64-bit integer value type, UInt64, which represents values that range from 0 to 18,446,744,073,709,551,615.
宣言することができます、Int64変数の範囲内にある整数リテラル値を割り当てます、Int64データ型。You can declare an Int64 variable and assign it a literal integer value that is within the range of the Int64 data type. 次の例で 2 つInt64変数し、それらにこの方法で値を割り当てます。The following example declares two Int64 variables and assigns them values in this way.
範囲がサブセットは、整数型の値を割り当てることができますのInt64型。You can assign the value of an integral type whose range is a subset of the Int64 type. これは、キャスト演算子 (C#) または Visual Basic で変換メソッドを必要としない拡大変換です。This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.
範囲を超えています数値型の値を割り当てることができますのInt64型。You can assign the value of a numeric type whose range exceeds that of the Int64 type. 縮小変換には、このため場合、キャスト演算子 (C#) および Visual Basic での変換メソッドが必要にOption Strictにします。This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if Option Strict is on. 数値の値がある場合、 Single、 Double、またはDecimal小数コンポーネント、その小数部分の処理が含まれる値は、変換を実行して、コンパイラによって異なります。If the numeric value is a Single, Double, or Decimal value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion. 次の例をいくつかの数値を割り当てる縮小変換を実行するInt64変数。The following example performs narrowing conversions to assign several numeric values to Int64 variables.
メソッドを呼び出すことができます、Convertいずれかに変換するクラスには、型がサポートされている、Int64値。You can call a method of the Convert class to convert any supported type to an Int64 value. これは、考えられるため、Int64をサポートしています、IConvertibleインターフェイス。This is possible because Int64 supports the IConvertible interface. 次の例は、配列の変換を示しています。Decimal値Int64値。The following example illustrates the conversion of an array of Decimal values to Int64 values.
呼び出すことができます、ParseまたはTryParseの文字列形式に変換するメソッド、Int64値をInt64します。You can call the Parse or TryParse method to convert the string representation of an Int64 value to an Int64. 文字列は、10 進数または 16 進数の数字を含めることができます。The string can contain either decimal or hexadecimal digits. 次の例では、10 進数と 16 進数の文字列の両方を使用して、解析操作を示しています。The following example illustrates the parse operation by using both a decimal and a hexadecimal string.
Int64型は、加算、減算、除算、乗算、否定、単項マイナス演算子などの標準の数値演算をサポートしています。The Int64 type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation. などの他の整数型、Int64型演算子もサポートされてAND、 OR、 XOR、左 shift キー、および右シフト演算子。Like the other integral types, the Int64 type also supports the bitwise AND, OR, XOR, left shift, and right shift operators.
標準の数値演算子を使用するには 2 つを比較するInt64を呼び出すの値か、CompareToまたはEqualsメソッド。You can use the standard numeric operators to compare two Int64 values, or you can call the CompareTo or Equals method.
メンバーを呼び出すこともできます、Mathをさまざまな数値の商と整数の除算の剰余を計算する 2 つの最大値または最小値を決定する絶対パスの値を取得するなどの数値演算を実行するクラス長整数、数値の符号を取得して、数値を四捨五入します。You can also call the members of the Math class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two long integers, getting the sign of a number, and rounding a number.
書式設定、Int64値先行ゼロなしで整数を文字列として、パラメーターなし呼び出せるToString()メソッド。To format an Int64 value as an integral string with no leading zeros, you can call the parameterless ToString() method. "D"書式指定子を使用して、指定された数の文字列表現の先頭のゼロも含めることができます。By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation. "N"書式指定子を使用すると、グループ区切り記号を含めるし、数値の文字列形式で表示する小数点以下桁数を指定できます。By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number. "X"書式指定子を使用して表すことができます、 Int64 16 進数文字列値。By using the "X" format specifier, you can represent an Int64 value as a hexadecimal string. 次の例の配列内の要素の書式設定Int64これら 4 つの方法で値。The following example formats the elements in an array of Int64 values in these four ways.
フォーマットすることも、 Int64 8 進数、バイナリ形式で呼び出すことによって、10 進または 16 進数の文字列の値、ToString(Int64, Int32)メソッドおよびメソッドの 2 番目のパラメーターとして情報を指定します。You can also format an Int64 value as a binary, octal, decimal, or hexadecimal string by calling the ToString(Int64, Int32) method and supplying the base as the method's second parameter. 次の例では、このバイナリは、8 進数、表示するメソッドをおよび整数値の配列の 16 進数表記を呼び出します。The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.
10 進数値として個々 の長整数を扱うだけでなくを長整数値、ビットごとの演算を実行します。 または、長整数値のバイナリまたは 16 進表現を使用することがあります。In addition to working with individual long integers as decimal values, you may want to perform bitwise operations with long integer values, or work with the binary or hexadecimal representations of long integer values. Int64 値は、4 分の 60 ビットを符号ビットとして使用される、63 ビット単位で表されます。Int64 values are represented in 63 bits, with the sixty-fourth bit used as a sign bit. 正の値は、符号および絶対値による表現を使用して表されます。Positive values are represented by using sign-and-magnitude representation. 負の値では、2 つの補数表記でします。Negative values are in two's complement representation. これでビットごとの演算を実行したときに留意する重要Int64値または個別のビットを使用する場合。This is important to keep in mind when you perform bitwise operations on Int64 values or when you work with individual bits. 数値、ブール値、または 2 つの非の 10 進値の比較演算を実行するためには、両方の値が同じ表現を使用する必要があります。In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.
Int64 の最大有効値を表します。Represents the largest possible value of an Int64. このフィールドは定数です。This field is constant.
Int64 の最小有効値を表します。Represents the smallest possible value of an Int64. このフィールドは定数です。This field is constant.
指定した 64 ビット符号付き整数とこのインスタンスを比較し、これらの相対値を示す値を返します。Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.
指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。Compares this instance to a specified object and returns an indication of their relative values.
このインスタンスが指定した Int64 値に等しいかどうかを示す値を返します。Returns a value indicating whether this instance is equal to a specified Int64 value.
このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。Returns a value indicating whether this instance is equal to a specified object.
TypeCode 値型の Int64 を返します。Returns the TypeCode for value type Int64.
指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.
指定したスタイルの数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。Converts the string representation of a number in a specified style to its 64-bit signed integer equivalent.
数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。Converts the string representation of a number to its 64-bit signed integer equivalent.
指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。Converts the string representation of a number in a specified culture-specific format to its 64-bit signed integer equivalent.
数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。Converts the string representation of a number to its 64-bit signed integer equivalent. 戻り値は変換が成功したか失敗したかを示します。A return value indicates whether the conversion succeeded or failed.
指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent. 戻り値は変換が成功したか失敗したかを示します。A return value indicates whether the conversion succeeded or failed.
このメンバーの説明については、ToChar(IFormatProvider) のトピックを参照してください。For a description of this member, see ToChar(IFormatProvider).
このメンバーの説明については、ToUInt32(IFormatProvider) のトピックを参照してください。For a description of this member, see ToUInt32(IFormatProvider).
このメンバーの説明については、ToUInt64(IFormatProvider) のトピックを参照してください。For a description of this member, see ToUInt64(IFormatProvider).